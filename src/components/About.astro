---
import AboutVisual from './AboutVisual.astro';
import locationIcon from '../assets/icons/location.svg';
---
<section class="about">
  <div class="about-content">
    <div class="about-text">
      <div class="about-header">
        <p class="about-label">[ about_me ]</p>
      </div>
      <div class="about-details">
        <p class="about-subtitle">System Administrator / Developer</p>
        <div class="location-container">
          <img src={locationIcon.src} alt="Location icon" class="location-icon" />
          <span class="location-text">Zapopan, Mexico ðŸ‡²ðŸ‡½</span>
        </div>
      </div>
      <h2 class="about-heading">From Infrastructure to Interaction</h2>
      <p class="about-body">
        My background is in the bedrock of technology. With experience in cloud computing and system administration, I've managed complex server environments and honed my skills in automating both Linux and Windows systems using Bash and PowerShell. This has given me a unique, metal-up perspective on how software truly operates.
      </p>
      <p class="about-body">
        Now, I'm applying that deep understanding to build the applications themselves. My journey is a natural progression from infrastructure to interactionâ€”from ensuring the system runs, to crafting the experiences users love. I'm passionate about becoming a full-stack developer, striving to build clean, efficient, and thoughtful digital solutions.
      </p>
    </div>
    <div class="about-image">
      <AboutVisual />
    </div>
  </div>
</section>

<style>
  .about {
    padding: 0.5rem 2rem;
  }

  .about-content {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    margin: 0 auto;
    align-items: center;
  }

  .about-header {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 0.5rem;
  }

  .about-details {
    margin-bottom: 1rem;
  }

  .about-subtitle {
    font-family: 'IBM Plex Mono', monospace;
    font-size: 1.2rem;
    font-weight: 700;
    color: var(--text-color);
    margin: 0;
  }

  .location-container {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-top: 0.5rem;
  }

  .location-icon {
    width: 16px;
    height: 16px;
    fill: currentColor;
  }

  .location-text {
    font-family: 'IBM Plex Mono', monospace;
    color: var(--text-color);
    font-weight: 500;
  }

  @media (max-width: 767px) {
    .location-text {
      font-size: 0.9rem;
    }
    .about-subtitle {
      font-size: 1rem;
    }
  }

  .about-label {
    font-family: 'IBM Plex Mono', monospace;
    color: var(--accent-color);
    font-weight: 500;
    margin-bottom: 0;
  }

  .about-heading {
    font-family: var(--font-serif);
    font-size: clamp(2.5rem, 5vw, 4rem);
    font-weight: 700;
    margin-top: 0;
    margin-bottom: 2rem;
    line-height: 1.2;
  }

  .about-body {
    font-family: var(--font-sans);
    font-size: 1.125rem;
    line-height: 1.6;
  }

  .about-text p:last-of-type {
    margin-bottom: 0;
  }

  @media (max-width: 767px) {
    .about-body {
      font-size: 0.9rem;
      line-height: 1.5;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const heading = document.querySelector('.about-heading');
    if (!heading) return;

    const text = heading.textContent;
    if (!text) return;
    heading.textContent = '';

    let i = 0;
    const typing = () => {
      if (i < text.length) {
        heading.textContent += text.charAt(i);
        i++;
        setTimeout(typing, 100);
      } else {
        const cursor = document.createElement('span');
        cursor.textContent = 'â–ˆ';
        cursor.style.animation = 'blink 1s step-end infinite';
        heading.appendChild(cursor);
        setTimeout(() => {
          cursor.style.display = 'none';
        }, 3000);
      }
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          typing();
          observer.unobserve(entry.target);
        }
      });
    });

    observer.observe(heading);
  });
</script>

<style is:global>
  @keyframes blink {
    from, to {
      opacity: 1;
    }
    50% {
      opacity: 0;
    }
  }
</style>
