---
import ProjectsButton from './ProjectsButton.astro';
---
<section class="hero">
  <div class="hero-content">
    <div class="title-container">
      <h1>HI, I'M<br/>KEVIN MOSQUEDA</h1>
    </div>
    <div class="portrait-container">
      <div class="background-text" aria-hidden="true">Synergy</div>
      <img src="/images/kevin-portrait.png" alt="Kevin Mosqueda portrait" class="portrait-img"/>
      <div class="accent-shape"></div>
      <div class="button-container">
        <ProjectsButton />
      </div>
    </div>
  </div>
</section>
<style>
  .hero {
    position: relative;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    padding-top: clamp(4vh, 8vh, 12vh);
    padding-left: 2rem;
    padding-right: 2rem;
    overflow: hidden;
  }
  .background-text {
    position: absolute;
    top: 55%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-family: var(--font-sans-serif);
    font-size: clamp(6rem, 25vw, 20rem);
    font-weight: 700;
    text-transform: uppercase;
    color: transparent;
    -webkit-text-stroke: 1px var(--text-color);
    text-stroke: 1px var(--text-color);
    opacity: 0.06;
    z-index: 1;
  }
  .hero-content {
    position: relative;
    z-index: 2;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    gap: 0;
  }
  .title-container {
    z-index: 10;
    position: relative;
    transform: translateY(clamp(-40px, -10vw, -20px));
  }
  .title-container h1 {
    font-family: 'Playfair Display', serif;
    font-size: clamp(2.4rem, 6.4vw, 4rem);
    font-weight: 800;
    font-style: italic;
    text-transform: uppercase;
    line-height: 1.1;
    letter-spacing: -0.02em;
    margin: 0;
    color: var(--text-color);
    text-align: center;
  }
  .portrait-container {
    position: relative;
    width: clamp(180px, 22vw, 260px);
    aspect-ratio: 3 / 4.2;
    margin-top: -5rem;
    z-index: 5;
    filter: drop-shadow(0 15px 25px rgba(0,0,0,0.15));
  }
  .portrait-img {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%) rotate(-8deg);
    width: 85%;
    height: 100%;
    object-fit: cover;
    object-position: center 15%;
    filter: grayscale(100%);
    z-index: 3;
    border-radius: 20px 20px 40px 40px;
  }
  .accent-shape {
    position: absolute;
    bottom: 15%;
    left: 50%;
    transform: translateX(-50%) rotate(-8deg);
    width: 85%;
    height: 70%;
    background-color: var(--accent-color);
    border-radius: 20px 20px 40px 40px;
    z-index: 2;
  }

  
  .button-container {
    position: absolute;
    bottom: -5.5rem;
    left: -6.5rem;
    z-index: 10;
  }
</style>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const portraitContainer = document.querySelector('.portrait-container') as HTMLElement;
    const body = document.body;

    if (!portraitContainer) return;

    const updateSplitPosition = () => {
      const rect = portraitContainer.getBoundingClientRect();
      const portraitBottom = rect.bottom + window.scrollY;
      const offset = 30; // Adjust this value to control the space below the portrait
      const splitPosition = portraitBottom + offset;

      body.style.setProperty('--split-pos', `${splitPosition}px`);
    };

    // Initial calculation
    updateSplitPosition();

    // Update on resize
    window.addEventListener('resize', updateSplitPosition);

    // Also update after a short delay to account for any layout shifts
    setTimeout(updateSplitPosition, 200);
  });
</script>

